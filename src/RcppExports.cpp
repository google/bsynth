// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "bsynth_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// make_F
Eigen::Matrix<stan::promote_args_t<stan::base_type_t<double>,                 stan::base_type_t<double>>,-1,-1> make_F(const int& T, const Eigen::Matrix<double,-1,1>& diagonal_loadings, const Eigen::Matrix<double,-1,1>& lower_tri_loadings, std::ostream* pstream__);
RcppExport SEXP _bsynth_make_F(SEXP TSEXP, SEXP diagonal_loadingsSEXP, SEXP lower_tri_loadingsSEXP, SEXP pstream__SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type T(TSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double,-1,1>& >::type diagonal_loadings(diagonal_loadingsSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double,-1,1>& >::type lower_tri_loadings(lower_tri_loadingsSEXP);
    Rcpp::traits::input_parameter< std::ostream* >::type pstream__(pstream__SEXP);
    rcpp_result_gen = Rcpp::wrap(make_F(T, diagonal_loadings, lower_tri_loadings, pstream__));
    return rcpp_result_gen;
END_RCPP
}
// make_beta
Eigen::Matrix<stan::promote_args_t<stan::base_type_t<double>,                 stan::base_type_t<double>, double, stan::base_type_t<double>>,-1,-1> make_beta(const int& J, const Eigen::Matrix<double,-1,-1>& off, const Eigen::Matrix<double,-1,1>& lambda, const double& eta, const Eigen::Matrix<double,-1,1>& tau, std::ostream* pstream__);
RcppExport SEXP _bsynth_make_beta(SEXP JSEXP, SEXP offSEXP, SEXP lambdaSEXP, SEXP etaSEXP, SEXP tauSEXP, SEXP pstream__SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type J(JSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double,-1,-1>& >::type off(offSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double,-1,1>& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double,-1,1>& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< std::ostream* >::type pstream__(pstream__SEXP);
    rcpp_result_gen = Rcpp::wrap(make_beta(J, off, lambda, eta, tau, pstream__));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_stan_fit4factor_model_with_covariates_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4factor_model_without_covariates_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model1_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model1_gammaOmega_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model2_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model3_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model4_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model5_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model6_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model7_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4model8_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_bsynth_make_F", (DL_FUNC) &_bsynth_make_F, 4},
    {"_bsynth_make_beta", (DL_FUNC) &_bsynth_make_beta, 6},
    {"_rcpp_module_boot_stan_fit4factor_model_with_covariates_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4factor_model_with_covariates_mod, 0},
    {"_rcpp_module_boot_stan_fit4factor_model_without_covariates_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4factor_model_without_covariates_mod, 0},
    {"_rcpp_module_boot_stan_fit4model1_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model1_mod, 0},
    {"_rcpp_module_boot_stan_fit4model1_gammaOmega_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model1_gammaOmega_mod, 0},
    {"_rcpp_module_boot_stan_fit4model2_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model2_mod, 0},
    {"_rcpp_module_boot_stan_fit4model3_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model3_mod, 0},
    {"_rcpp_module_boot_stan_fit4model4_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model4_mod, 0},
    {"_rcpp_module_boot_stan_fit4model5_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model5_mod, 0},
    {"_rcpp_module_boot_stan_fit4model6_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model6_mod, 0},
    {"_rcpp_module_boot_stan_fit4model7_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model7_mod, 0},
    {"_rcpp_module_boot_stan_fit4model8_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4model8_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_bsynth(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
